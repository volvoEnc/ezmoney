const VkBot = require('../lib/vkbotLib');
const userController = require('../controllers/userController');
const Bot = new VkBot();
const Queue = require('../lib/queue');
const {MODE, VK_SERVICE_KEY, VK_GROUP_ID, VK_API_TOKEN, VK_APP_ID, VK_APP_SICRET} = process.env;



exports.admin__get_app_link = function (vk_id, link) {
  let text = link;
  Queue.setTask(vk_id, 'message.send', {message: text});
};

exports.custom_error = function (vk_id, text) {
  Queue.setTask(vk_id, 'message.send', {message: text});
};




exports.noti__token_delete = function (vk_id) {

  let text = `–í –±–æ—Ç–µ —Å–∫–æ—Ä–æ –ø–æ—è–≤–∏—Ç—Å—è –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç—å –≤—ã–ø–æ–ª–Ω—è—Ç—å –∑–∞–¥–∞–Ω–∏—è. –î–ª—è –≤–Ω–µ–¥—Ä–µ–Ω–∏—è —ç—Ç–æ–π —Å–∏—Å—Ç–µ–º—ã, –Ω–∞–º –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ –ø–æ–ª—É—á–∏—Ç—å –æ—Ç –í–∞—Å –Ω–æ–≤—ã–π —Ç–æ–∫–µ–Ω –¥–æ—Å—Ç—É–ø–∞.<br><br> –ü–æ–∂–∞–ª—É–π—Å—Ç–∞ –ø–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç–µ –∞–∫–∫–∞—É–Ω—Ç –µ—â–µ —Ä–∞–∑!`;
  let kb = Bot.markup.keyboard([
    [ Bot.markup.button('üë§ –ü—Ä–æ—Ñ–∏–ª—å', 'secondary', {'command':'–ø—Ä–æ—Ñ–∏–ª—å'}) ]
  ]);
  kb = JSON.stringify(kb);
  Queue.setTask(vk_id, 'message.send', {message: text, keyboard: kb});
};
exports.noti__task_activate = function (vk_id) {
  let text = '';
  text += '‚úÖ –ó–∞–¥–∞–Ω–∏—è –∑–∞–ø—É—â–µ–Ω—ã! <br><br>';
  text += 'üí¨ –î–æ—Å—Ç—É–ø–Ω—ã –∑–∞–¥–∞–Ω–∏—è –Ω–∞ –ª–∞–π–∫–∏ –∏ –Ω–∞ —Ä–µ–ø–æ—Å—Ç—ã. –ü–µ—Ä–µ–π–¥–∏—Ç–µ –≤ —Ä–∞–∑–¥–µ–ª –∑–∞–¥–∞–Ω–∏–π –∏ –æ–∑–Ω–∞–∫–æ–º—å—Ç–µ—Å—å —Å –ø—Ä–∞–≤–∏–ª–∞–º–∏!<br><br>';
  text += '‚ö† –ó–∞–¥–∞–Ω–∏—è –Ω–∞—Ö–æ–¥—è—Ç—Å—è –≤ —Ç–µ—Å—Ç–æ–≤–æ–º —Ä–µ–∂–∏–º–µ, –µ—Å–ª–∏ –í—ã –æ–±–Ω–∞—Ä—É–∂–∏—Ç–µ –æ—à–∏–±–∫—É, —Ç–æ –ø–∏—à–∏—Ç–µ –≤ –æ–±—Å—É–∂–¥–µ–Ω–∏—è —Å–æ–æ–±—â–µ—Å—Ç–≤–∞.';
  let kb = Bot.markup.keyboard([
    [ Bot.markup.button('üë§ –ü—Ä–æ—Ñ–∏–ª—å', 'secondary', {'command':'–ø—Ä–æ—Ñ–∏–ª—å'}) ]
  ]);
  kb = JSON.stringify(kb);
  Queue.setTask(vk_id, 'message.send', {message: text, keyboard: kb});
};

exports.accepted_rules = function (vk_id, dop_text = '') {
  let text = dop_text;
  text += `–î–ª—è –ø—Ä–æ–¥–æ–ª–∂–µ–Ω–∏—è —Ä–∞–±–æ—Ç—ã —Å –Ω–∞—à–∏–º —Å–µ—Ä–≤–∏—Å–æ–º, –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ —Å–æ–≥–ª–∞—Å–∏—Ç—å—Å—è —Å –ø—Ä–∞–≤–∏–ª–∞–º–∏. <br> https://vk.com/@ezmoneybots-pravila-servisa <br><br> –ù–∞–∂–º–∏—Ç–µ –Ω–∞ –∫–Ω–æ–ø–∫—É –î–∞ –∏–ª–∏ –Ω–∞–ø–∏—à–∏—Ç–µ, –î–∞.`;
  let kb = Bot.markup.keyboard([
    [
      Bot.markup.button('‚úÖ –î–∞', 'positive', {'command':'true'}),
      Bot.markup.button('üö´ –ù–µ—Ç', 'negative', {'command':'false'}),
    ]
  ]);
  kb = JSON.stringify(kb);
  Queue.setTask(vk_id, 'message.send', {message: text, keyboard: kb});
}




exports.confirmUser = function (ctx, link, status) {
  let vk_id = ctx.message.from_id;
  let text;
  if(status == 'success') {
    text = `‚úÖ –î–ª—è –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è –∞–∫–∫–∞—É–Ω—Ç–∞ –ø–µ—Ä–µ–π–¥–∏—Ç–µ –ø–æ —Å—Å—ã–ª–∫–µ:`;
    Queue.setTask(vk_id, 'message.send', {message: text});
    setTimeout(function () {
      text = link;
      Queue.setTask(vk_id, 'message.send', {message: text});
    }, 500);
  }
  else {
    text = `–í—ã —É–∂–µ –∑–∞–ø—Ä–∞—à–∏–≤–∞–ª–∏ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ. –ü–µ—Ä–µ–π–¥–∏—Ç–µ –ø–æ –ø—Ä–µ–¥—ã–¥—É—â–µ–π —Å—Å—ã–ª–∫–µ. <br> –°–ª–µ–¥—É—é—â–∏–π –∑–∞–ø—Ä–æ—Å –º–æ–∂–Ω–æ —Å–¥–µ–ª–∞—Ç—å, ${status}`;
    Queue.setTask(vk_id, 'message.send', {message: text});
  }
}

exports.mailing = function (vk_id, text_msg) {
  let text = text_msg;
  let kb = Bot.markup.keyboard([
    [ Bot.markup.button('üë§ –ü—Ä–æ—Ñ–∏–ª—å', 'secondary', {'command':'–ø—Ä–æ—Ñ–∏–ª—å'}) ]
  ]);
  kb = JSON.stringify(kb);
  Queue.setTask(vk_id, 'message.send', {message: text, keyboard: kb, dont_parse_links: 1});
}






exports.tasks = function (vk_id, inline_kb = false, start = false) {
  let text = '';
  if (start) {
    text += `üë®‚Äçüè´ –û–±—É—á–µ–Ω–∏–µ<br><br>`;
    text += `‚ö† –ü–µ—Ä–µ–¥ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–µ–º –∑–∞–¥–∞–Ω–∏–π, –í–Ω–∏–º–∞—Ç–µ–ª—å–Ω–æ –æ–∑–Ω–∞–∫–æ–º—å—Å—è —Å –ø—Ä–∞–≤–∏–ª–∞–º–∏: <br>`;
    text += `üëâüèª vk.com/@ezmoneybots-pravila-vypolneniya-zadanii<br><br>`;
    text += `üí¨ –ó–∞–¥–∞–Ω–∏—è –ø–æ–∑–≤–æ–ª—è—é—Ç –Ω–∞—á–∞—Ç—å –∑–∞—Ä–∞–±–∞—Ç—ã–≤–∞—Ç—å –±–µ–∑ –≤–ª–æ–∂–µ–Ω–∏–π.<br>`;
    text += `üí¨ –û–Ω–∏ –±—ã–≤–∞—é—Ç —Ä–∞–∑–Ω—ã–µ, —Å–µ–π—á–∞—Å –¥–æ—Å—Ç—É–ø–Ω–æ 2 —Ç–∏–ø–∞ –∑–∞–¥–∞–Ω–∏–π.<br><br>`;
    text += `‚ö† –û–ø–ª–∞—Ç–∞ –∑–∞ –∑–∞–¥–∞–Ω–∏—è –ø–æ—Å—Ç—É–ø–∞–µ—Ç –≤ —Ç–µ—á–µ–Ω–∏–∏ —á–∞—Å–∞.<br><br>`;
  }

  text += `üìã –ó–∞–¥–∞–Ω–∏—è:<br><br>`;
  text += `üìå –õ–∞–π–∫ ~ 0.1 ‚ÇΩ<br>`;
  text += `üìå –†–µ–ø–æ—Å—Ç ~ 1 ‚ÇΩ<br>`;
  //text += `üìå –ü–æ–¥–ø–∏—Å–∫–∞ –Ω–∞ —Ä–∞—Å—Å—ã–ª–∫—É ~ 10 ‚ÇΩ<br>`;

  let kb;

  if(inline_kb){
    kb = Bot.markup.keyboard([
      [ Bot.markup.button('‚ù§Ô∏è –õ–∞–π–∫–∏', 'primary', {'command':'getlikeinfojob'}) ],
      [ Bot.markup.button('üó£ –†–µ–ø–æ—Å—Ç—ã', 'primary', {'command':'getrepinfojob'}) ],
    //  [ Bot.markup.button('üöÅ –†–µ–∫–ª–∞–º–Ω–∞—è —Ä–∞—Å—Å—ã–ª–∫–∞', 'positive', {'command':'getrasslinfojob'}) ]
    ]).inline();
  } else {
    kb = Bot.markup.keyboard([
      [
        Bot.markup.button('‚ù§Ô∏è –õ–∞–π–∫–∏', 'primary', {'command':'getlikeinfojob'}),
        Bot.markup.button('üó£ –†–µ–ø–æ—Å—Ç—ã', 'primary', {'command':'getrepinfojob'})
      ],
      //[ Bot.markup.button('üöÅ –†–µ–∫–ª–∞–º–Ω–∞—è —Ä–∞—Å—Å—ã–ª–∫–∞', 'positive', {'command':'getrasslinfojob'}) ],
      [ Bot.markup.button('‚¨ÖÔ∏è –ù–∞–∑–∞–¥', 'secondary', {'command':'–ø—Ä–æ—Ñ–∏–ª—å'}) ]
    ]);
  }
  kb = JSON.stringify(kb);
  Queue.setTask(vk_id, 'message.send', {message: text, keyboard: kb});
}

exports.non_task = function (vk_id) {
  let text = `–î–∞–Ω–Ω—ã–π —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª –≤ —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–µ. –°–ª–µ–¥–∏—Ç–µ –∑–∞ –Ω–æ–≤–æ—Å—Ç—è–º–∏ –≤ –≥—Ä—É–ø–ø–µ.`;
  Queue.setTask(vk_id, 'message.send', {message: text});
}

exports.repost_task = function (vk_id, posts) {
  let text = `üìå –°–¥–µ–ª–∞–π—Ç–µ —Ä–µ–ø–æ—Å—Ç –∑–∞–ø–∏—Å–µ–π –Ω–∏–∂–µ, —á—Ç–æ-–±—ã –ø–æ–ª—É—á–∏—Ç—å –Ω–∞–≥—Ä–∞–¥—É!<br>`;
  text += `‚ö† –û–ø–ª–∞—Ç–∞ –∑–∞ –∑–∞–¥–∞–Ω–∏—è –ø–æ—Å—Ç—É–ø–∞–µ—Ç –≤ —Ç–µ—á–µ–Ω–∏–∏ —á–∞—Å–∞.<br><br>`;
  if (posts == ''){
    text += `–°–µ–π—á–∞—Å —Ä–µ–ø–æ—Å—Ç–∏—Ç—å –Ω–µ—á–µ–≥–æ ‚òπ`;
  } else {
    text += posts;
  }
  Queue.setTask(vk_id, 'message.send', {message: text});
}
exports.like_task = function (vk_id, posts) {
  let text = `üìå –ü–æ—Å—Ç–∞–≤—å—Ç–µ –ª–∞–π–∫ –Ω–∞ –∑–∞–ø–∏—Å–∏ –Ω–∏–∂–µ, —á—Ç–æ-–±—ã –ø–æ–ª—É—á–∏—Ç—å –Ω–∞–≥—Ä–∞–¥—É!<br>`;
  text += `‚ö† –û–ø–ª–∞—Ç–∞ –∑–∞ –∑–∞–¥–∞–Ω–∏—è –ø–æ—Å—Ç—É–ø–∞–µ—Ç –≤ —Ç–µ—á–µ–Ω–∏–∏ —á–∞—Å–∞.<br><br>`;
  if (posts == ''){
    text += `–°–µ–π—á–∞—Å –ª–∞–π–∫–∞—Ç—å –Ω–µ—á–µ–≥–æ ‚òπ`;
  } else {
    text += posts;
  }
  Queue.setTask(vk_id, 'message.send', {message: text});
}

exports.error_task_custom = function (vk_id, error_code) {
  let text = `‚õî –ü—Ä–∏ –ø–æ–ø—ã—Ç–∫–µ –ø–æ–ª—É—á–∏—Ç—å –¥–æ—Å—Ç—É–ø –∫ –≤–∞—à–µ–º—É –∞–∫–∫–∞—É–Ω—Ç—É, —Å–∏—Å—Ç–µ–º–∞ –ø–æ–ª—É—á–∏–ª–∞ –æ—à–∏–±–∫—É. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞ –ø–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç–µ –∞–∫–∫–∞—É–Ω—Ç –µ—â–µ —Ä–∞–∑. –ö–æ–¥ –æ—à–∏–±–∫–∏: ${error_code}<br>`;
  let kb = Bot.markup.keyboard([
    [ Bot.markup.button('‚¨ÖÔ∏è –ù–∞–∑–∞–¥', 'secondary', {'command':'–ø—Ä–æ—Ñ–∏–ª—å'}) ]
  ]);
  kb = JSON.stringify(kb);
  Queue.setTask(vk_id, 'message.send', {message: text, keyboard: kb});
}
exports.error_task = function (vk_id) {
  let text = `‚õî –°–∏—Å—Ç–µ–º–∞ –Ω–µ —Å–º–æ–≥–ª–∞ –ø–æ–ª—É—á–∏—Ç—å –¥–æ—Å—Ç—É–ø –∫ –í–∞—à–µ–º—É –∞–∫–∫–∞—É–Ω—Ç—É.<br>`;
  text += `‚õî –≠—Ç–æ –ø—Ä–æ–∏–∑–æ—à–ª–æ –ø–æ—Ç–æ–º—É, —á—Ç–æ –í–∞—à –ø—Ä–æ—Ñ–∏–ª—å –í–ö–æ–Ω—Ç–∞–∫—Ç–µ –∏–º–µ–µ—Ç —Å—Ç–∞—Ç—É—Å "–ü—Ä–∏–≤–∞—Ç–Ω—ã–π"<br>`;
  text += `‚õî –ó–∞–¥–∞–Ω–∏—è –æ–ø–ª–∞—á–∏–≤–∞—Ç—å—Å—è –Ω–µ –±—É–¥—É—Ç. –î–ª—è —Ä–∞–∑–±–ª–æ–∫–∏—Ä–æ–≤–∫–∏ –ø–∏—à–∏—Ç–µ —Ç–µ—Ö.–ø–æ–¥–¥–µ—Ä–∂–∫—É.`;
  Queue.setTask(vk_id, 'message.send', {message: text});
}
exports.error_token = function (vk_id) {
  let text = `‚õî –í–∞—à —Ç–æ–∫–µ–Ω –Ω–µ –ø—Ä–æ—à–µ–ª –ø—Ä–æ–≤–µ—Ä–∫—É<br>`;
  text += `‚õî –î–æ—Å—Ç—É–ø –∫ –Ω–µ–∫–æ—Ç–æ—Ä—ã–º —Ä–∞–∑–¥–µ–ª–∞–º –±–æ—Ç–∞ –∑–∞–ø—Ä–µ—â–µ–Ω<br>`;
  let kb = Bot.markup.keyboard([
    [ Bot.markup.button('‚¨ÖÔ∏è –ù–∞–∑–∞–¥', 'secondary', {'command':'–ø—Ä–æ—Ñ–∏–ª—å'}) ]
  ]);
  kb = JSON.stringify(kb);
  Queue.setTask(vk_id, 'message.send', {message: text, keyboard: kb});
}
exports.success_task = function (vk_id, type_check, add_money, add_expr, add_text = '') {
  let text = add_text;
  let task = '–ø–æ—Å—Ç–∞–≤–∏—Ç—å –ª–∞–π–∫';

  if(type_check == 'repost') task = '—Å–¥–µ–ª–∞—Ç—å —Ä–µ–ø–æ—Å—Ç';

  text += `‚úÖ –ü–æ–ª—É—á–µ–Ω–∞ –æ–ø–ª–∞—Ç–∞ –∑–∞ –∑–∞–¥–∞–Ω–∏–µ, ${task}<br>`;
  text += `üí≥ + ${add_money} ‚ÇΩ <br>`;
  text += `üî± + ${add_expr} –æ–ø.`;

  let kb = Bot.markup.keyboard([
    [ Bot.markup.button('‚¨ÖÔ∏è –ù–∞–∑–∞–¥', 'secondary', {'command':'–ø—Ä–æ—Ñ–∏–ª—å'}) ]
  ]);
  kb = JSON.stringify(kb);
  Queue.setTask(vk_id, 'message.send', {message: text, keyboard: kb});
};
exports.report_task = function (vk_id, type_check, add_rep_b) {
  let text = '';
  let task = '–ø–æ—Å—Ç–∞–≤–∏—Ç—å –ª–∞–π–∫';

  if(type_check == 'repost') task = '—Å–¥–µ–ª–∞—Ç—å —Ä–µ–ø–æ—Å—Ç';

  text += `‚õî –ó–∞–¥–∞–Ω–∏–µ, ${task} –Ω–µ –ø—Ä–æ—à–ª–æ –ø—Ä–æ–≤–µ—Ä–∫—É!<br>`;
  text += `‚≠ï + ${add_rep_b} —à—Ç—Ä–∞—Ñ–Ω—ã—Ö –±–∞–ª–ª–æ–≤. <br>`;

  let kb = Bot.markup.keyboard([
    [ Bot.markup.button('‚¨ÖÔ∏è –ù–∞–∑–∞–¥', 'secondary', {'command':'–ø—Ä–æ—Ñ–∏–ª—å'}) ]
  ]);
  kb = JSON.stringify(kb);
  Queue.setTask(vk_id, 'message.send', {message: text, keyboard: kb});
};









exports.successConfirmUser = function (vk_id) {
  let text = `‚úÖ –ê–∫–∫–∞—É–Ω—Ç —É—Å–ø–µ—à–Ω–æ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω!`;
  let kb = Bot.markup.keyboard([
    [ Bot.markup.button('üë§ –ü—Ä–æ—Ñ–∏–ª—å', 'secondary', {'command':'–ø—Ä–æ—Ñ–∏–ª—å'}) ]
  ]);
  kb = JSON.stringify(kb);
  Queue.setTask(vk_id, 'message.send', {message: text, keyboard: kb});
}




exports.ping = function (vk_id, tm) {
  let text = `–í—Ä–µ–º—è –æ–±—Ä–∞–±–æ—Ç–∫–∏ –∑–∞–ø—Ä–æ—Å–∞: ${tm}–º—Å.`;
  Queue.setTask(vk_id, 'message.send', {message: text});
}













exports.referals = function (vk_id, date, start = false) {
  let text = '';

  if (start) {
    text += `üë®‚Äçüè´ –û–±—É—á–µ–Ω–∏–µ<br><br>`;
    text += `üí¨ –†–µ—Ñ–µ—Ä–∞–ª—ã —ç—Ç–æ –ø—Ä–æ—Å—Ç–æ–π —Å–ø–æ—Å–æ–± –∑–∞—Ä–∞–±–æ—Ç–∞—Ç—å.<br>`;
    text += `üí¨ –í—Å–µ —á—Ç–æ –Ω—É–∂–Ω–æ —Å–¥–µ–ª–∞—Ç—å, —ç—Ç–æ –ø—Ä–∏–≥–ª–∞—Å–∏—Ç—å –¥—Ä—É–≥–∞ –∏ –ø–æ–ø—Ä–æ—Å–∏—Ç—å –≤–≤–µ—Å—Ç–∏ –µ–≥–æ —Ç–≤–æ–π –±–æ–Ω—É—Å-–∫–æ–¥ –∏–ª–∏ –¥–∞—Ç—å –µ–º—É —Å–≤–æ—é —Ä–µ—Ñ.—Å—Å—ã–ª–∫—É!<br>`;
    text += `üí¨ –î–ª—è —Ç–æ–≥–æ, —á—Ç–æ –±—ã –±–æ–ª—å—à–µ —É–∑–Ω–∞—Ç—å –æ —Ä–µ—Ñ–µ—Ä–∞–ª–∞—Ö –ø–æ—Å–º–æ—Ç—Ä–∏ —ç—Ç–æ—Ç –ø–æ—Å—Ç: <br>`;
    text += `üëâüèª https://vk.com/@ezmoneybots-referaly <br><br>`;
  }

  text += `üë™ –†–µ—Ñ–µ—Ä–∞–ª–æ–≤: ${date.count}<br>`;
  text += `üí∞ –î–æ—Ö–æ–¥: ${date.income} ‚ÇΩ<br>`;
  text += `üí≥ –û–∂–∏–¥–∞—é—Ç: ${date.income_bm} ‚ÇΩ<br><br>`;
  text += `üéÅ –ë–æ–Ω—É—Å-–∫–æ–¥: ${date.code}<br>`;
  text += `üí∞ –†–µ—Ñ–µ—Ä–∞–ª—å–Ω–∞—è —Å—Å—ã–ª–∫–∞: https://vk.com/app7177293#r/${date.code}<br>`;
  text += `‚úÖ –ó–∞ –∫–∞–∂–¥–æ–≥–æ —Ä–µ—Ñ–µ—Ä–∞–ª–∞ —Ç—ã –ø–æ–ª—É—á–∏—à—å ${date.add_b_r} ‚ÇΩ. –ê —Ç–∞–∫ –∂–µ ${date.add_p_r}% –æ—Ç –ø–æ–ø–æ–ª–µ–Ω–µ–Ω–∏—è –±–∞–ª–∞–Ω—Å–∞.`;

  let kb = Bot.markup.keyboard([
    [ Bot.markup.button('‚¨ÖÔ∏è –ù–∞–∑–∞–¥', 'secondary', {'command':'–ø—Ä–æ—Ñ–∏–ª—å'}) ]
  ]);
  kb = JSON.stringify(kb);
  Queue.setTask(vk_id, 'message.send', {message: text, keyboard: kb, dont_parse_links: 1});
};
exports.refCode__error = function (vk_id, type) {
  let text = '';
  //—É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è —É–∂–µ –µ—Å—Ç—å –∫–æ–¥
  if (type == 'overflow_code') {
    text += `üö´ –≠—Ç–æ—Ç –±–æ–Ω—É—Å –º–æ–∂–Ω–æ –ø–æ–ª—É—á–∏—Ç—å —Ç–æ–ª—å–∫–æ 1 —Ä–∞–∑!`;
  }
  //–ª—é–±–∞—è –æ—à–∏–±–∫–∞ –ø—Ä–∏ –ø—Ä–æ–≤–µ—Ä–∫–µ –∫–æ–¥–∞
  else if (type == 'overflow_user'){
    text += `üö´ –í—ã –Ω–µ –º–æ–∂–µ—Ç–µ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å —Å–≤–æ–π –∫–æ–¥`;
  }
  else if (type == 'bad_code'){
    text += `üö´ –ö–æ–¥ –Ω–µ–¥–µ–π—Å—Ç–≤–∏—Ç–µ–ª–µ–Ω!`;
  }
  let kb = Bot.markup.keyboard([
    [ Bot.markup.button('‚¨ÖÔ∏è –ù–∞–∑–∞–¥', 'secondary', {'command':'–ø—Ä–æ—Ñ–∏–ª—å'}) ]
  ]);
  kb = JSON.stringify(kb);
  Queue.setTask(vk_id, 'message.send', {message: text, keyboard: kb});
};
exports.refCode__success = function (vk_id, add_money) {
  let text = '';
  text += `‚úÖ –ü–æ–∑–¥—Ä–∞–≤–ª—è–µ–º! <br> –ë–æ–Ω—É—Å –≤ —Ä–∞–∑–º–µ—Ä–µ ${add_money} ‚ÇΩ –ø–æ–ª—É—á–µ–Ω!`;
  let kb = Bot.markup.keyboard([
    [ Bot.markup.button('‚¨ÖÔ∏è –ù–∞–∑–∞–¥', 'secondary', {'command':'–ø—Ä–æ—Ñ–∏–ª—å'}) ]
  ]);
  kb = JSON.stringify(kb);
  Queue.setTask(vk_id, 'message.send', {message: text, keyboard: kb});
};
exports.refCode__success_inv = function (vk_id, add_money, vk_id_add) {
  let text = '';
  text += `‚úÖ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å: id${vk_id_add}, –≤–≤–µ–ª —Ç–≤–æ–π –±–æ–Ω—É—Å-–∫–æ–¥! <br> –í–æ–∑–Ω–∞–≥—Ä–∞–∂–¥–µ–Ω–∏–µ –≤ —Ä–∞–∑–º–µ—Ä–µ ${add_money} ‚ÇΩ –Ω–∞—á–∏—Å–ª–µ–Ω–æ!`;
  let kb = Bot.markup.keyboard([
    [ Bot.markup.button('‚¨ÖÔ∏è –ù–∞–∑–∞–¥', 'secondary', {'command':'–ø—Ä–æ—Ñ–∏–ª—å'}) ]
  ]);
  kb = JSON.stringify(kb);
  Queue.setTask(vk_id, 'message.send', {message: text, keyboard: kb});
};
exports.refCode__go = function (vk_id, start = false) {
  let text = '';
  if (start) {
    text += `üë®‚Äçüè´ –û–±—É—á–µ–Ω–∏–µ<br><br>`;
    text += `üí¨ –ë–æ–Ω—É—Å-–∫–æ–¥ –º–æ–∂–Ω–æ –≤–≤–µ—Å—Ç–∏ —Ç–æ–ª—å–∫–æ –æ–¥–∏–Ω —Ä–∞–∑!.<br>`;
    text += `üí¨ –ö–æ–¥ –º–æ–∂–Ω–æ –ø–æ–ø—Ä–æ—Å–∏—Ç—å —É –ª—é–±–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –ø—Ä–æ–µ–∫—Ç–∞. –£ —Ç–µ–±—è –æ–Ω —Ç–æ–∂–µ –µ—Å—Ç—å.<br>`;
    text += `üí¨ –ú—ã —Å–æ–∑–¥–∞–ª–∏ —Å–ø–µ—Ü–∏–∞–ª—å–Ω–æ–µ –æ–±—Å—É–∂–¥–µ–Ω–∏–µ, –≥–¥–µ –º–æ–∂–Ω–æ –≤–∑—è—Ç—å –∫–æ–¥.<br>`;
    text += `üëâüèª https://vk.com/topic-187786454_39939941 <br><br>`;
  }
  text += `üí∞ –î–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –±–æ–Ω—É—Å–∞, –≤–≤–µ–¥–∏—Ç–µ –∫–æ–¥: `;
  let kb = Bot.markup.keyboard([
    [ Bot.markup.button('‚¨ÖÔ∏è –ù–∞–∑–∞–¥', 'secondary', {'command':'–ø—Ä–æ—Ñ–∏–ª—å'}) ]
  ]);
  kb = JSON.stringify(kb);
  Queue.setTask(vk_id, 'message.send', {message: text, keyboard: kb});
};












exports.userSettings = function (vk_id) {
  let text = `‚úè –ù–∞—Å—Ç—Ä–æ–π–∫–∏: `;
  let kb = Bot.markup.keyboard([
    [ Bot.markup.button('üîî –£–≤–µ–¥–æ–º–ª–µ–Ω–∏—è', 'primary', {'command':'notifications_settings'}) ],
    [ Bot.markup.button('‚¨ÖÔ∏è –ù–∞–∑–∞–¥', 'secondary', {'command':'–ø—Ä–æ—Ñ–∏–ª—å'}) ]
  ]);
  kb = JSON.stringify(kb);
  Queue.setTask(vk_id, 'message.send', {message: text, keyboard: kb});
}

exports.notifications = function (vk_id, inline_kb, noti, d_text) {
  let text;
  if (d_text === false) {
    text = `üîî –£–≤–µ–¥–æ–º–ª–µ–Ω–∏—è: <br><br>`;

    text += `üí° –°–∏—Å—Ç–µ–º–Ω—ã–µ —Å–æ–æ–±—â–µ–Ω–∏—è: <br> –£–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –æ –≥–æ—Ç–æ–≤–Ω–æ—Å—Ç–∏ –±–æ–Ω—É—Å–æ–≤, –ø—Ä–∏–≤–ª–µ—á–µ–Ω–∏–∏ –Ω–æ–≤–æ–≥–æ —Ä–µ—Ñ–µ—Ä–∞–ª–∞, –≤—ã–≤–æ–¥–µ —Å—Ä–µ–¥—Å—Ç–≤ —Å –±–∞–ª–∞–Ω—Å–∞ –∏ —Ç.–¥.<br><br>`;
    text += `üí° –ù–æ–≤–æ—Å—Ç–∏, –∞–∫—Ü–∏–∏ –∏ –∏–Ω–¥–∏–≤–∏–¥—É–∞–ª—å–Ω—ã–µ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏—è: <br> –ü–æ–ª—É—á–∞–π—Ç–µ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –æ –≤–∞–∂–Ω—ã—Ö —Å–æ–±—ã—Ç–∏—è—Ö –Ω–∞ —Å–µ—Ä–≤–∏—Å–µ, –≤—ã–≥–æ–¥–Ω—ã—Ö –∞–∫—Ü–∏—è—Ö –∏ –º–Ω–æ–≥–æ–º –¥—Ä—É–≥–æ–º! –¢–∞–∫ –∂–µ –º—ã –±—É–¥–µ–º —Ñ–æ—Ä–º–∏—Ä–æ–≤–∞—Ç—å –¥–ª—è –≤–∞—Å –ò–Ω–¥–∏–≤–∏–¥—É–∞–ª—å–Ω—ã–µ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏—è –∏ –∑–∞–¥–∞–Ω–∏—è! <br><br>`;
    text += `üí° –†–µ–∫–ª–∞–º–Ω–∞—è —Ä–∞—Å—Å—ã–ª–∫–∞: <br> –ü–æ–ª—É—á–∞–π—Ç–µ —Ä–µ–∫–ª–∞–º–Ω—É—é —Ä–∞—Å—Å—ã–ª–∫—É. –ù–µ —á–∞—â–µ 1 —Ä–∞–∑–∞ –≤ 24 —á–∞—Å–∞. –û—Ç–ø–∏—Å–∞—Ç—å—Å—è –º–æ–∂–Ω–æ –≤ –ª—é–±–æ–π –º–æ–º–µ–Ω—Ç.`;

  } else {
    text = d_text;
  }
  let noti_simbol = {
    ads: 'üîî',
    alert: 'üîî',
    news: 'üîî'
  };
  if (noti.ads === false) noti_simbol.ads = 'üîï';
  if (noti.alert === false) noti_simbol.alert = 'üîï';
  if (noti.news === false) noti_simbol.news = 'üîï';


  let kb = Bot.markup.keyboard([
    [ Bot.markup.button(`${noti_simbol.ads} –†–µ–∫–ª–∞–º–Ω–∞—è —Ä–∞—Å—Å—ã–ª–∫–∞`, 'positive', {'command':'ads_noti'}) ],
    [
      Bot.markup.button(`${noti_simbol.alert} –°–∏—Å—Ç–µ–º–Ω—ã–µ —Å–æ–æ–±—â–µ–Ω–∏—è`, 'primary', {'command':'alert_noti'}),
      Bot.markup.button(`${noti_simbol.news} –ù–æ–≤–æ—Å—Ç–∏, –∞–∫—Ü–∏–∏ –∏ —Ç.–¥.`, 'primary', {'command':'news_noti'})
    ],
    [ Bot.markup.button('‚¨ÖÔ∏è –ù–∞–∑–∞–¥', 'secondary', {'command':'settings'}) ]
  ]);
  kb = JSON.stringify(kb);
  Queue.setTask(vk_id, 'message.send', {message: text, keyboard: kb});
}
exports.toggle_notifications = function (vk_id, type, ctx, user) {
  let text;

  if (type === false) text = `‚ö† –£–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –≤—ã–∫–ª—é—á–µ–Ω—ã.`;
  else text = `‚úÖ –£–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –≤–∫–ª—é—á–µ–Ω—ã.`;

  userController.notifications(ctx, user, text);
  //Queue.setTask(vk_id, 'message.send', {message: text});
}
exports.bonuses = function (vk_id, data, start = false) {
  let text = '';

  if (start) {
    text += `üë®‚Äçüè´ –û–±—É—á–µ–Ω–∏–µ<br><br>`;
    text += `üí¨ –≠—Ç–æ —Ä–∞–∑–¥–µ–ª —Å –±–æ–Ω—É—Å–∞–º–∏.<br>`;
    text += `üí¨ –ë–æ–Ω—É—Å—ã –ø–æ–∑–≤–æ–ª—è—é—Ç –ø–æ–ª—É—á–∞—Ç—å –¥–µ–Ω—å–≥–∏, –ø—Ä–æ—Å—Ç–æ –ø—Ä–æ—Å–º–æ—Ç—Ä–µ–≤ –∫–æ—Ä–æ—Ç–∫—É—é —Ä–µ–∫–ª–∞–º—É.<br>`;
    text += `üí¨ –î–ª—è —Ç–æ–≥–æ, —á—Ç–æ –±—ã —É–∑–Ω–∞—Ç—å –∫–∞–∫ —Å–æ–±–∏—Ä–∞—Ç—å –±–æ–Ω—É—Å—ã, –ø–æ—Å–º–æ—Ç—Ä–∏ —ç—Ç—É —Å—Ç–∞—Ç—å—é: <br>`;
    text += `üëâüèª https://vk.com/@ezmoneybots-bonusy <br><br>`;
  }

  let b24_c = data.b_24.access ? 'positive' : 'negative';
  let b12_c = data.b_12.access ? 'positive' : 'negative';
  let b1_c = data.b_1.access ? 'positive' : 'negative';

  text += `üéÅ –°–ø–∏—Å–æ–∫ –¥–æ—Å—Ç—É–ø–Ω—ã—Ö –±–æ–Ω—É—Å–æ–≤:<br><br>`;

  if (!data.b_24.access) text += `‚õî –ï–∂–µ–¥–Ω–µ–≤–Ω—ã–π –±–æ–Ω—É—Å –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω.<br>‚åö –ó–∞—Ö–æ–¥–∏ ${data.b_24.next_access}.<br><br>`;
  else text += `üíé –ï–∂–µ–¥–Ω–µ–≤–Ω—ã–π –±–æ–Ω—É—Å –≥–æ—Ç–æ–≤!<br><br>`;
  if (!data.b_12.access) text += `‚õî –ë–æ–Ω—É—Å –∫–∞–∂–¥—ã–µ 12 —á. –µ—â–µ –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω.<br>‚åö –ó–∞—Ö–æ–¥–∏ ${data.b_12.next_access}.<br><br>`;
  else text += `üíé –ë–æ–Ω—É—Å –∫–∞–∂–¥—ã–µ 12 —á–∞—Å–æ–≤ –≥–æ—Ç–æ–≤!<br><br>`;
  if (!data.b_1.access) text += `‚õî –ë–æ–Ω—É—Å –∫–∞–∂–¥—ã–π —á–∞—Å –µ—â–µ –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω.<br>‚åö –ó–∞—Ö–æ–¥–∏ ${data.b_1.next_access}.<br><br>`;
  else text += `üíé –ë–æ–Ω—É—Å –∫–∞–∂–¥—ã–π —á–∞—Å –≥–æ—Ç–æ–≤!<br><br>`;

  let kb = Bot.markup.keyboard([
    [ Bot.markup.button('üíé –ï–∂–µ–¥–Ω–µ–≤–Ω—ã–π –±–æ–Ω—É—Å', b24_c, {'command':'addbonus-24h'}) ],
    [ Bot.markup.button('üíé –ë–æ–Ω—É—Å –∫–∞–∂–¥—ã–µ 12 —á.', b12_c, {'command':'addbonus-12h'}) ],
    [ Bot.markup.button('üíé –ë–æ–Ω—É—Å –∫–∞–∂–¥—ã–π —á–∞—Å', b1_c, {'command':'addbonus-1h'}) ],
    [ Bot.markup.button('‚¨ÖÔ∏è –ù–∞–∑–∞–¥', 'secondary', {'command':'–ø—Ä–æ—Ñ–∏–ª—å'}) ]
  ]);

  if (data.b_code.access == true) {
    kb = Bot.markup.keyboard([
      [ Bot.markup.button('üíé –ë–æ–Ω—É—Å-–∫–æ–¥', 'positive', {'command':'addbonus-code'}) ],
      [ Bot.markup.button('üíé –ï–∂–µ–¥–Ω–µ–≤–Ω—ã–π –±–æ–Ω—É—Å', b24_c, {'command':'addbonus-24h'}) ],
      [ Bot.markup.button('üíé –ë–æ–Ω—É—Å –∫–∞–∂–¥—ã–µ 12 —á.', b12_c, {'command':'addbonus-12h'}) ],
      [ Bot.markup.button('üíé –ë–æ–Ω—É—Å –∫–∞–∂–¥—ã–π —á–∞—Å', b1_c, {'command':'addbonus-1h'}) ],
      [ Bot.markup.button('‚¨ÖÔ∏è –ù–∞–∑–∞–¥', 'secondary', {'command':'–ø—Ä–æ—Ñ–∏–ª—å'}) ]
    ]);
  }

  kb = JSON.stringify(kb);
  Queue.setTask(vk_id, 'message.send', {message: text, keyboard: kb});
}
exports.error_bonus = function (vk_id, type, date) {
  let text = `–í—Ä–µ–º—è –µ—â–µ –Ω–µ –ø—Ä–∏—à–ª–æ!<br>`;

  if (type == 'b_24') text += `–ó–∞–π–¥–∏ –∑–∞ –µ–∂–µ–¥–Ω–µ–≤–Ω—ã–º –±–æ–Ω—É—Å–æ–º ${date}.`;
  else if (type == 'b_12') text += `–ó–∞–π–¥–∏ –∑–∞ –±–æ–Ω—É—Å–æ–º ${date}.`;
  else if (type == 'b_1') text += `–ó–∞–π–¥–∏ –∑–∞ –µ–∂–µ—á–∞—Å–æ–≤—ã–º –±–æ–Ω—É—Å–æ–º ${date}.`;

  //kb = JSON.stringify(kb);
  Queue.setTask(vk_id, 'message.send', {message: text});
}
exports.success_bonus = function (vk_id, type, add_money, add_expr, num_rep, add_text) {
  let text = add_text;

  // if(num_rep == 1) text += `–û—É, —Ç—ã –ø–æ–ª—É—á–∏–ª –±–æ–Ω—É—Å!<br>`;
  // else if(num_rep == 2) text += `–ü–æ–∑–¥—Ä–∞–≤–ª—è—é, –±–æ–Ω—É—Å –ø–æ–ª—É—á–µ–Ω!<br>`;
  // else if(num_rep == 3) text += `–ö–∞–∫–∞—è —Ä–∞–¥–æ—Å—Ç—å!<br>`;
  // else if(num_rep == 4) text += `–ß—Ç–æ-—Ç–æ –ø—Ä–æ–∏–∑–æ—à–ª–æ!<br>`;
  // else if(num_rep == 5) text += `–ë - –∑–Ω–∞—á–∏—Ç –ë–æ–Ω—É—Å!<br>`;

  if (type == 'b_24') text += `‚úÖ –ï–∂–µ–¥–Ω–µ–≤–Ω—ã–π –±–æ–Ω—É—Å –∑–∞—á–∏—Å–ª–µ–Ω –Ω–∞ –±–∞–ª–∞–Ω—Å! <br>üí≥ + ${add_money} ‚ÇΩ <br>üî± + ${add_expr} –æ–ø.`;
  else if (type == 'b_12') text += `‚úÖ –ë–æ–Ω—É—Å –∫–∞–∂–¥—ã–µ 12 —á–∞—Å–æ–≤ —É–∂–µ –Ω–∞ –±–∞–ª–∞–Ω—Å–µ! <br>üí≥ + ${add_money} ‚ÇΩ <br>üî± + ${add_expr} –æ–ø.`;
  else if (type == 'b_1') text += `‚úÖ –ï–∂–µ—á–∞—Å–æ–≤–æ–π –±–æ–Ω—É—Å –∑–∞—á–∏—Å–ª–µ–Ω! <br>üí≥ + ${add_money} ‚ÇΩ <br>üî± + ${add_expr} –æ–ø.`;

  let kb = Bot.markup.keyboard([
    [ Bot.markup.button('‚¨ÖÔ∏è –ù–∞–∑–∞–¥', 'secondary', {'command':'–ø—Ä–æ—Ñ–∏–ª—å'}) ]
  ]);

  kb = JSON.stringify(kb);
  Queue.setTask(vk_id, 'message.send', {message: text, keyboard: kb});
}
exports.go_bonus = async (vk_id, short_url, data) => {
  let b24_c = data.b_24.access ? 'positive' : 'negative';
  let b12_c = data.b_12.access ? 'positive' : 'negative';
  let b1_c = data.b_1.access ? 'positive' : 'negative';
  let kb = Bot.markup.keyboard([
    [ Bot.markup.button('üíé –ï–∂–µ–¥–Ω–µ–≤–Ω—ã–π –±–æ–Ω—É—Å', b24_c, {'command':'addbonus-24h'}) ],
    [ Bot.markup.button('üíé –ë–æ–Ω—É—Å –∫–∞–∂–¥—ã–µ 12 —á.', b12_c, {'command':'addbonus-12h'}) ],
    [ Bot.markup.button('üíé –ë–æ–Ω—É—Å –∫–∞–∂–¥—ã–π —á–∞—Å', b1_c, {'command':'addbonus-1h'}) ],
    [ Bot.markup.button('‚¨ÖÔ∏è –ù–∞–∑–∞–¥', 'secondary', {'command':'–ø—Ä–æ—Ñ–∏–ª—å'}) ]
  ]);

  kb = JSON.stringify(kb);
  let text = `–¢–≤–æ–π –±–æ–Ω—É—Å –≥–æ—Ç–æ–≤! <br> –î–ª—è –µ–≥–æ –ø–æ–ª—É—á–µ–Ω–∏—è –ø–µ—Ä–µ–π–¥–∏ –ø–æ —Å—Å—ã–ª–∫–µ:`;
  await Queue.setTask(vk_id, 'message.send', {message: text});
  setTimeout(() => {
    text = short_url;
    Queue.setTask(vk_id, 'message.send', {message: text, keyboard: kb, dont_parse_links: 1});
  }, 500);
}
exports.notifications_bonus = function (vk_id, type) {
  let text;
  if (type == 'b_24') text = `üíé –£—Ä–∞! –ï–∂–µ–¥–Ω–µ–≤–Ω—ã–π –±–æ–Ω—É—Å –Ω–∞–∫–æ–Ω–µ—Ü-—Ç–æ –º–æ–∂–Ω–æ —Å–æ–±—Ä–∞—Ç—å. üíé`;
  else if (type == 'b_12') text = `üíé –ë–æ–Ω—É—Å –∫–æ—Ç–æ—Ä—ã–π –º–æ–∂–Ω–æ —Å–æ–±—Ä–∞—Ç—å –≤—Å–µ–≥–æ –ª–∏—à—å —Ä–∞–∑ –≤ 12 —á–∞—Å–æ–≤, –≥–æ—Ç–æ–≤ –∫ —Å–±–æ—Ä—É! üíé`;
  else if (type == 'b_1') text = `üíé –î–∑—ã–Ω—å-–¥–∑—ã–Ω—å! <br> –ü—Ä–∏—à–ª–æ –≤—Ä–µ–º—è —Å–æ–±—Ä–∞—Ç—å –µ–∂–µ—á–∞—Å–æ–≤–æ–π –±–æ–Ω—É—Å! üíé`;

  Queue.setTask(vk_id, 'message.send', {message: text});
}





exports.outmoney_canceled = function (vk_id, type) {
  let text = '';

  if (type == 'user') {

  }
  else if (type == 'admin'){

  }
};
exports.outmoney_list = function (vk_id, date, count) {
  let text = `üí∞ –°–ø–∏—Å–æ–∫ –∑–∞—è–≤–æ–∫ –Ω–∞ –≤—ã–≤–æ–¥: <br><br>`;
  //console.log(date);
  if (date[0] == undefined) {
    text += `‚úÖ –ó–∞—è–≤–æ–∫ –Ω–µ—Ç!`;
  } else {
    date.forEach(z => {
      text += `ID: ${z.np}<br>`;
      text += `–°—É–º–º–∞: ${z.sum} ‚ÇΩ<br>`;
      text += `–î–∞–Ω–Ω—ã–µ: ${z.comm} <br>`;
      text += `–°—Å—ã–ª–∫–∞: https://vk.com/id${z.user} <br><br>`;
    });
  }
  console.log(count);
  if (count > 0) {
    text += `–ï—â–µ: ${count}`;
  }
  console.log(text);
  Queue.setTask(vk_id, 'message.send', {message: text});
}
exports.outmoney_success_user = function (vk_id, id) {
  let text = `‚úÖ –°—Ä–µ–¥—Å—Ç–≤–∞ –≤—ã–ø–ª–∞—á–µ–Ω—ã!<br>`;
  text += `–ù–æ–º–µ—Ä –∑–∞—è–≤–∫–∏: ${id}<br>`;

  let kb = Bot.markup.keyboard([
    [ Bot.markup.button('‚¨ÖÔ∏è –ù–∞–∑–∞–¥', 'primary', {'command':'–ø—Ä–æ—Ñ–∏–ª—å'}) ]
  ]);
  kb = JSON.stringify(kb);
  Queue.setTask(vk_id, 'message.send', {message: text, keyboard: kb});
}
exports.outmoney_success_admin = function (vk_id, id) {
  let text = `–ó–∞—è–≤–∫–∞ ‚Ññ${id} –≤—ã–ø–ª–∞—á–µ–Ω–∞!<br>`;
  Queue.setTask(vk_id, 'message.send', {message: text});
}
exports.outmoney_error_user = function (vk_id, id, msg) {
  let text = `üö´ –û—Ç–∫–∞–∑ –≤ –≤—ã–ø–ª–∞—Ç–µ!<br>`;
  text += `–ù–æ–º–µ—Ä –∑–∞—è–≤–∫–∏: ${id}<br>`;
  text += `–ü—Ä–∏—á–∏–Ω–∞: ${msg}`;

  let kb = Bot.markup.keyboard([
    [ Bot.markup.button('‚¨ÖÔ∏è –ù–∞–∑–∞–¥', 'primary', {'command':'–ø—Ä–æ—Ñ–∏–ª—å'}) ]
  ]);
  kb = JSON.stringify(kb);
  Queue.setTask(vk_id, 'message.send', {message: text, keyboard: kb});
}
exports.outmoney_error_admin = function (vk_id, id) {
  let text = `–í—ã–ø–ª–∞—Ç–∞ –ø–æ —Å—á–µ—Ç—É ‚Ññ${id} –æ—Ç–º–µ–Ω–µ–Ω–∞!`;
  Queue.setTask(vk_id, 'message.send', {message: text});
}
exports.outmoney__error = function (vk_id, type) {
  let text = '';

  if (type == 'lvl'){
    text = `üö´ –í—ã–≤–æ–¥ —Å—Ä–µ–¥—Å—Ç–≤ –¥–æ—Å—Ç—É–ø–µ–Ω —Å 3-–≥–æ —É—Ä–æ–≤–Ω—è!`;
  }
  else if (type == 'limit') {
    text = `üö´ –î–æ—Å—Ç–∏–≥–Ω—É—Ç –µ–∂–µ–¥–Ω–µ–≤–Ω—ã–π –ª–∏–º–∏—Ç –Ω–∞ –≤—ã–≤–æ–¥ —Å—Ä–µ–¥—Å—Ç–≤.`;
  }
  else if (type == 'max') {
    text = `üö´ –í—ã –Ω–µ –º–æ–∂–µ—Ç–µ –≤—ã–≤–µ—Å—Ç–∏ –±–æ–ª—å—à–µ, —á–µ–º –í–∞—à –ª–∏–º–∏—Ç –Ω–∞ –≤—ã–≤–æ–¥ –≤ —Å—É—Ç–∫–∏.`;
  }
  else if (type == 'min') {
    text = `üö´ –ú–∏–Ω–∏–º–∞–ª—å–Ω–∞—è —Å—É–º–º–∞ –¥–ª—è –≤—ã–≤–æ–¥–∞ 1 ‚ÇΩ`;
  }
  else if (type == 'nomoney') {
    text = `üö´ –ù–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ —Å—Ä–µ–¥—Å—Ç–≤ –Ω–∞ –±–∞–ª–∞–Ω—Å–µ`;
  }

  let kb = Bot.markup.keyboard([
    [ Bot.markup.button('üë§ –ü—Ä–æ—Ñ–∏–ª—å', 'secondary', {'command':'–ø—Ä–æ—Ñ–∏–ª—å'}) ]
  ]);
  kb = JSON.stringify(kb);
  Queue.setTask(vk_id, 'message.send', {message: text, keyboard: kb});
}
exports.outmoney__continius = function (vk_id, limit) {
  let text = '';
  text += `‚úè –í–≤–µ–¥–∏—Ç–µ —Å—É–º–º—É –¥–ª—è –≤—ã–≤–æ–¥–∞<br>`;
  text += `üí° –í–∞—à –ª–∏–º–∏—Ç –Ω–∞ –≤—ã–≤–æ–¥ —Å–µ–≥–æ–¥–Ω—è: ${limit} ‚ÇΩ <br>`;

  let kb = Bot.markup.keyboard([
    [ Bot.markup.button('‚¨ÖÔ∏è –ù–∞–∑–∞–¥', 'secondary', {'command':'–ø—Ä–æ—Ñ–∏–ª—å'}) ]
  ]);
  kb = JSON.stringify(kb);
  Queue.setTask(vk_id, 'message.send', {message: text, keyboard: kb});
}
exports.outmoney__requisites = function (vk_id) {
  let text = '';
  text += `‚úè –í–≤–µ–¥–∏—Ç–µ —Å–ø–æ—Å–æ–± –≤—ã–≤–æ–¥–∞ –∏ —Ä–µ–∫–≤–∏–∑–∏—Ç—ã: <br>`;
  text += `üí° –ù–∞–ø—Ä–∏–º–µ—Ä, < –∫–∏–≤–∏, +79008080999 > <br>`;

  let kb = Bot.markup.keyboard([
    [ Bot.markup.button('üë§ –ü—Ä–æ—Ñ–∏–ª—å', 'secondary', {'command':'–ø—Ä–æ—Ñ–∏–ª—å'}) ]
  ]);
  kb = JSON.stringify(kb);
  Queue.setTask(vk_id, 'message.send', {message: text, keyboard: kb});
}
exports.outmoney__finish = function (vk_id, type, date) {
  let text = '';
  if (type == 'user') {
    text += `‚úÖ –ó–∞—è–≤–∫–∞ –Ω–∞ –≤—ã–≤–æ–¥ —É—Å–ø–µ—à–Ω–æ —Å–æ–∑–¥–∞–Ω–∞! ‚Ññ${date.np}<br>`;
    let kb = Bot.markup.keyboard([
      [ Bot.markup.button('üë§ –ü—Ä–æ—Ñ–∏–ª—å', 'secondary', {'command':'–ø—Ä–æ—Ñ–∏–ª—å'}) ]
    ]);
    kb = JSON.stringify(kb);
    Queue.setTask(vk_id, 'message.send', {message: text, keyboard: kb});
  }
  else if (type == 'admin') {
    text += `‚ö† –ó–∞—è–≤–∫–∞ –Ω–∞ –≤—ã–≤–æ–¥ <br><br>`;
    text += `ID: ${date.np}<br>`;
    text += `–°—É–º–º–∞: ${date.sum} ‚ÇΩ<br>`;
    text += `–î–∞–Ω–Ω—ã–µ: ${date.comm}<br>`;
    text += `–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å: https://vk.com/id${date.user}`;
    Queue.setTask(vk_id, 'message.send', {message: text});
  }
}









exports.payment_link = function (vk_id, link, np) {
  let text = `üí° –°—á–µ—Ç ‚Ññ${np} —Å–æ–∑–¥–∞–Ω!<br>`;
  text += `üè∑ –î–ª—è –æ–ø–ª–∞—Ç—ã –ø–µ—Ä–µ–π–¥–∏—Ç–µ –ø–æ —Å—Å—ã–ª–∫–µ: `;
  Queue.setTask(vk_id, 'message.send', {message: text});
  setTimeout(() => {
    text = link;
    Queue.setTask(vk_id, 'message.send', {message: text, dont_parse_links: 1});
  }, 500);
}
exports.go_sum = function (vk_id) {
  let text = `üí≥ –ü–æ–ø–æ–ª–µ–Ω–∏–µ –±–∞–ª–∞–Ω—Å–∞<br><br>`;
  text += `‚ö† –ú–∏–Ω–∏–º–∞–ª—å–Ω–∞—è —Å—É–º–º–∞ –ø–æ–ø–æ–ª–µ–Ω–∏—è 1 ‚ÇΩ<br>`;
  text += `‚ö† –ú–∞–∫—Å–∏–º–∞–ª—å–Ω–∞—è —Å—É–º–º–∞ –ø–æ–ø–æ–ª–µ–Ω–∏—è 10 000 ‚ÇΩ<br><br>`;
  text += `‚úè –í–≤–µ–¥–∏—Ç–µ —Å—É–º–º—É –ø–æ–ø–æ–ª–µ–Ω–∏—è: `;

  let kb = Bot.markup.keyboard([
    [ Bot.markup.button('‚¨ÖÔ∏è –ù–∞–∑–∞–¥', 'secondary', {'command':'–ø—Ä–æ—Ñ–∏–ª—å'}) ]
  ]);
  kb = JSON.stringify(kb);
  Queue.setTask(vk_id, 'message.send', {message: text, keyboard: kb});
}
exports.success_pay = function (vk_id, add_money, add_exp, dop_text) {
  let text = dop_text;
  text += `‚úÖ –ë–∞–ª–∞–Ω—Å –ø–æ–ø–æ–ª–µ–Ω–µ–Ω –Ω–∞ ${add_money} ‚ÇΩ<br>`;
  text += `üî± –ü–æ–ª—É—á–µ–Ω–æ –æ–ø—ã—Ç–∞: ${add_exp}`;

  let kb = Bot.markup.keyboard([
    [ Bot.markup.button('‚¨ÖÔ∏è –ù–∞–∑–∞–¥', 'secondary', {'command':'–ø—Ä–æ—Ñ–∏–ª—å'}) ]
  ]);
  kb = JSON.stringify(kb);
  Queue.setTask(vk_id, 'message.send', {message: text, keyboard: kb});
}
exports.success_pay_admin = function (vk_id_a, vk_id, add_money) {
  let text = '';
  text += `‚úÖ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –ø–æ–ø–æ–ª–Ω–∏–ª –±–∞–ª–∞–Ω—Å –Ω–∞ ${add_money} ‚ÇΩ<br>`;
  text += `https://vk.com/id${vk_id}`;

  Queue.setTask(vk_id_a, 'message.send', {message: text});
}
exports.success_pay_r = function (vk_id, add_money, procent) {
  let text = '';
  text += `‚úÖ –†–µ—Ñ–µ—Ä–∞–ª—å–Ω—ã–µ –æ—Ç—á–∏—Å–ª–µ–Ω–∏—è.<br>`;
  text += `üí≥ –ù–∞ —Ä–∞–±–æ—á–∏–π —Å—á–µ—Ç –∑–∞—á–∏—Å–ª–µ–Ω–æ ${add_money} ‚ÇΩ (${procent}%)<br>`;
  text += `üí° –ß–µ–º –≤—ã—à–µ —Ç–≤–æ–π —É—Ä–æ–≤–µ–Ω—å, —Ç–µ–º –±–æ–ª—å—à–µ %`;

  let kb = Bot.markup.keyboard([
    [ Bot.markup.button('‚¨ÖÔ∏è –ù–∞–∑–∞–¥', 'secondary', {'command':'–ø—Ä–æ—Ñ–∏–ª—å'}) ]
  ]);
  kb = JSON.stringify(kb);
  Queue.setTask(vk_id, 'message.send', {message: text, keyboard: kb});
}
exports.error_pay = function (vk_id) {
  let text = `üö´ –û–ø–ª–∞—Ç–∞ –æ—Ç–º–µ–Ω–µ–Ω–∞!`;

  Queue.setTask(vk_id, 'message.send', {message: text});
}
exports.payments = function (vk_id, start, stocks) {
  let text = '';
  if (start) {
    text += `üë®‚Äçüè´ –û–±—É—á–µ–Ω–∏–µ<br><br>`;
    text += `üí¨ –ü—Ä–∏ –ø–æ–ø–æ–ª–Ω–µ–Ω–∏–∏ –±–∞–ª–∞–Ω—Å–∞ –≤—ã –ø–æ–ª—É—á–∞–µ—Ç–µ –æ–ø—ã—Ç!<br>`;
    text += `üí¨ 1 ‚ÇΩ = 5 –æ–ø.<br><br>`;
  }

  if (stocks != undefined && stocks.length > 0) {
    text += `üéÅ –î–µ–π—Å—Ç–≤—É—é—â–∏–µ –∞–∫—Ü–∏–∏: <br>`;
    stocks.forEach(stock => {
      text += `üéó ${stock.name}<br>`;
    });
    text += `<br>`;
  }

  text += `üí≥ –í—ã–±–µ—Ä–∏—Ç–µ —Å–ø–æ—Å–æ–± –ø–æ–ø–æ–ª–Ω–µ–Ω–∏—è: <br><br>`;
  text += `üíé VkPay - –Ω–µ—Ç –∫–æ–º–∏—Å—Å–∏–π. –ú–æ–º–µ–Ω—Ç–∞–ª—å–Ω–æ–µ –ø–æ–ª—É—á–µ–Ω–∏–µ —Å—Ç—Ä–µ–¥—Å—Ç–≤ –Ω–∞ –±–∞–ª–∞–Ω—Å. <br>`;
  text += `üí∞ –î—Ä—É–≥–∏–µ —Å–ø–æ—Å–æ–±—ã - –ø–æ–ø–æ–ª–µ–Ω–∏–µ –∫–∞—Ä—Ç–æ–π, —ç–ª–µ–∫—Ç—Ä–æ–Ω–Ω—ã–º–∏ –∫–æ—à–µ–ª—å–∫–∞–º–∏ (Qiwi, YandexMoney) –∏ —Ç.–¥. <br>`;
  let group_id = VK_GROUP_ID;
  let kb = {
    "buttons": [
      [{
          "action": {
            "type": 'vkpay',
            "hash": `action=transfer-to-group&group_id=${group_id}`
          }
      }],
      [{
          "action": {
            "type": 'text',
            "label": `üí∞ –î—Ä—É–≥–∏–µ —Å–ø–æ—Å–æ–±—ã`,
            "payload": {'command':'otheraddpay'}
          },
          "color": "positive"
      }],
      [{
          "action": {
            "type": 'text',
            "label": `‚¨ÖÔ∏è –ù–∞–∑–∞–¥`,
            "payload": {'command':'–ø—Ä–æ—Ñ–∏–ª—å'}
          }
      }]
    ]
  }
  kb = JSON.stringify(kb);
  kb = JSON.stringify(kb);
  //console.log(kb);
  Queue.setTask(vk_id, 'message.send', {message: text, keyboard: kb});
}













exports.profile = function (vk_id, data) {
  let text = '';

  if (data.start == true) {
    text += `üë®‚Äçüè´ –û–±—É—á–µ–Ω–∏–µ<br><br>`;
    text += `üí¨ –≠—Ç–æ —Ç–≤–æ–π –ø—Ä–æ—Ñ–∏–ª—å. –¢—É—Ç —Ç—ã –º–æ–∂–µ—à—å –ø–æ—Å–º–æ—Ç—Ä–µ—Ç—å –∫—Ä–∞—Ç–∫—É—é –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ —Å–≤–æ–µ–º –∞–∫–∫–∞—É–Ω—Ç–µ.<br>`;
    text += `üí¨ –£ —Ç–µ–±—è –µ—Å—Ç—å 2 –±–∞–ª–∞–Ω—Å–∞, –æ—Å–Ω–æ–≤–æ–Ω–æ–π –∏ —Ä–∞–±–æ—á–∏–π.<br>`;
    text += `üí¨ –° –æ—Å–Ω–æ–≤–Ω–æ–≥–æ –±–∞–ª–∞–Ω—Å–∞ –º–æ–∂–Ω–æ –≤—ã–≤–æ–¥–∏—Ç—å –¥–µ–Ω—å–≥–∏.<br>`;
    text += `üí¨ –ö–∞–∂–¥—É—é –º–∏–Ω–∏—Ç—É, –Ω–∞ –æ—Å–Ω–æ–≤–Ω–æ–π –±–∞–ª–∞–Ω—Å –ø–æ—Å—Ç—É–ø–∞–µ—Ç –¥–æ—Ö–æ–¥. –†–∞–∑–º–µ—Ä –ø–æ—Å—Ç—É–ø–ª–µ–Ω–∏–π –∑–∞–≤–∏—Å–∏—Ç –æ—Ç —Å—É–º–º—ã –¥–µ–Ω–µ–≥ –Ω–∞ —Ä–∞–±–æ—á–µ–º –±–∞–ª–∞–Ω—Å–µ.<br><br>`;
    text += `üí¨ –ü–µ—Ä–µ–π–¥–∏ –≤ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É –¥–ª—è –±–æ–ª–µ–µ –ø–æ–¥—Ä–æ–±–Ω–æ–π –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ –¥–æ—Ö–æ–¥–µ.<br>`;
    text += `üí¨ –ï—Å–ª–∏ —É —Ç–µ–±—è –ø—Ä–æ–ø–∞–ª–∏ –∫–Ω–æ–ø–∫–∏, –Ω–∞–ø–∏—à–∏ –ü—Ä–æ—Ñ–∏–ª—å, –∏–ª–∏ –Ω–∞–∂–º–∏ –Ω–∞ –∏–∫–æ–Ω–∫—É (—Å–º. —Å–∫—Ä–∏–Ω—à–æ—Ç –Ω–∏–∂–µ).<br><br>`;
  }

  text += `üë§ –ü—Ä–æ—Ñ–∏–ª—å<br><br>`;
  text += `üí∏ –ë–∞–ª–∞–Ω—Å: ${data.balance_osn} ‚ÇΩ<br>`;
  text += `üí≥ –ë–∞–ª–∞–Ω—Å (—Ä–∞–±–æ—á–∏–π): ${data.balance_job} ‚ÇΩ<br>`;
  text += `üí∞ –î–æ—Ö–æ–¥ —Å —Ä–µ—Ñ–µ—Ä–µ–ª–æ–≤: ${data.referals_inc} ‚ÇΩ<br>`;
  text += `üë™ –†–µ—Ñ–µ—Ä–∞–ª–æ–≤: ${data.referals}<br>`;
  text += `üöÄ –£—Ä–æ–≤–µ–Ω—å ${data.lvl} (${data.exp}/${data.next_exp})<br><br>`;
  if(data.vk_token == undefined || data.vk_token == ''){
    text += `‚ùó –ê–∫–∫–∞—É–Ω—Ç –Ω–µ –ø—Ä–æ—à–µ–ª –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ ‚ùó`;
  }

  let d_quest = [
                  Bot.markup.button('üìã –ó–∞–¥–∞–Ω–∏—è', 'primary', {'command':'getquest'}),
                  Bot.markup.button('üéÅ –ë–æ–Ω—É—Å—ã', 'primary', {'command':'getbonus'}),
                ];
  let d_token = [
                  Bot.markup.button('‚úÖ –ü–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç—å –∞–∫–∫–∞—É–Ω—Ç', 'primary', {'command':'gettoken'})
                ];

  let kb = Bot.markup.keyboard([
                [ Bot.markup.button('', 'secondary') ],
                [
                  Bot.markup.button('üìù –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞', 'secondary', {'command':'stats'}),
                  Bot.markup.button('üë• –†–µ—Ñ–µ—Ä–∞–ª—ã', 'secondary', {'command':'refd'}),
                  Bot.markup.button('‚úè –ù–∞—Å—Ç—Ä–æ–π–∫–∏', 'secondary', {'command':'settings'}),
                ],
                [
                  Bot.markup.button('üí≥ –ü–æ–ø–æ–ª–Ω–∏—Ç—å', 'positive', {'command':'addpay'}),
                  Bot.markup.button('üí∏ –í—ã–≤–µ—Å—Ç–∏', 'negative', {'command':'outmoney'}),
                ]
        ]);

  if (data.vk_token == undefined || data.vk_token == '') kb.__keyboard.buttons[0] = d_token;
  else kb.__keyboard.buttons[0] = d_quest;

  kb = JSON.stringify(kb);
  if (data.start == true) {
    Queue.setTask(vk_id, 'message.send', {message: text, keyboard: kb, attachment: 'photo-187786454_457239075'});
  } else {
    Queue.setTask(vk_id, 'message.send', {message: text, keyboard: kb});
  }
}

exports.stats = function (vk_id, data) {
  let text = `üìä –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞: <br><br>`;

  text += `üí∞ –î–æ—Ö–æ–¥:<br>`;
  text += `üíµ –î–æ—Ö–æ–¥ –≤ —á–∞—Å: ~ ${data.income.h} ‚ÇΩ<br>`;
  text += `üíµ –î–æ—Ö–æ–¥ –≤ —Å—É—Ç–∫–∏: ~ ${data.income.d} ‚ÇΩ<br>`;
  text += `üíµ –î–æ—Ö–æ–¥ –≤ –º–µ—Å—è—Ü: ~ ${data.income.m} ‚ÇΩ<br><br>`;

  text += `üéÅ –ë–æ–Ω—É—Å—ã: <br>`;
  text += `üíé 24 —á–∞—Å–æ–≤—ã—Ö: ${data.bonus.b_24} ‚ÇΩ<br>`;
  text += `üíé 12 —á–∞—Å–æ–≤—ã—Ö: ${data.bonus.b_12} ‚ÇΩ<br>`;
  text += `üíé 1 —á–∞—Å–æ–≤—ã—Ö: ${data.bonus.b_1} ‚ÇΩ<br>`;
  text += `üíé –í—Å–µ–≥–æ: ${data.bonus.b_all} ‚ÇΩ<br><br>`;

  text += `üìã–ó–∞–¥–∞–Ω–∏—è:<br>`;
  text += `‚ù§Ô∏è –ü–æ—Å—Ç–∞–≤–ª–µ–Ω–æ –ª–∞–π–∫–æ–≤: ${data.tasks.liked_count}<br>`;
  text += `‚ù§Ô∏è –ó–∞—Ä–∞–±–æ—Ç–∞–Ω–æ –Ω–∞ –ª–∞–π–∫–∞—Ö: ${data.tasks.liked_income} ‚ÇΩ<br>`;
  text += `üó£ –°–¥–µ–ª–∞–Ω–æ —Ä–µ–ø–æ—Å—Ç–æ–≤: ${data.tasks.repost_count}<br>`;
  text += `üó£ –ó–∞—Ä–∞–±–æ—Ç–∞–Ω–æ –Ω–∞ —Ä–µ–ø–æ—Å—Ç–∞—Ö: ${data.tasks.repost_income} ‚ÇΩ<br><br>`;
  //text += `‚úçÔ∏è –í—ã–ø–æ–ª–Ω–µ–Ω–æ –∑–∞–¥–∞–Ω–∏–π: 0<br>`;
  //text += `‚úçÔ∏è –ó–∞—Ä–∞–±–æ—Ç–∞–Ω–æ –Ω–∞ –∑–∞–¥–∞–Ω–∏—è—Ö: 0 ‚ÇΩ<br><br>`;
  text += `üïê –ù–∞ –ø—Ä–æ–µ–∫—Ç–µ: ${data.time_in_prj}<br>`;
  text += `üìÖ –ê–∫–∫–∞—É–Ω—Ç —Å–æ–∑–¥–∞–Ω: ${data.date_reg}<br><br>`;
  //text += `üõç –ó–∞ –≤—Å–µ –≤—Ä–µ–º—è –∑–∞—Ä–∞–±–æ—Ç–∞–ª–∏: 4 000 ‚ÇΩ <br><br>`;
  text += `‚≠ïÔ∏è –®—Ç—Ä–∞—Ñ–Ω—ã—Ö –±–∞–ª–ª–æ–≤: ${data.report_balls}`;

  let kb = Bot.markup.keyboard([
    [ Bot.markup.button('‚¨ÖÔ∏è –ù–∞–∑–∞–¥', 'secondary', {'command':'–ø—Ä–æ—Ñ–∏–ª—å'}) ]
  ]);
  kb = JSON.stringify(kb);
  Queue.setTask(vk_id, 'message.send', {message: text, keyboard: kb});
}
